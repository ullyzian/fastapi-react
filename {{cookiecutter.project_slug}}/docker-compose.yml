version: '3.7'
services:
  nginx:
    container_name: nginx
    image: nginx:1.17
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf
    ports:
      - 80:80
      - 443:443
    networks:
      - app-network
    depends_on:
      - backend
      - frontend

  redis:
    container_name: redis
    image: redis
    ports:
      - 6379:6379
    networks:
      - app-network

  postgres:
    container_name: postgres
    image: postgres:12
    restart: always
    env_file:
      - .env
    ports:
      - 5432:5432
    networks:
      - app-network
    volumes:
      - pg-data:/var/lib/postgresql/data:cached

  worker:
    container_name: celery
    build:
      context: backend
      dockerfile: Dockerfile
    command: celery -A app.tasks worker -l INFO -Q main-queue -c 1
    networks:
      - app-network
    depends_on:
      - redis

  flower:
    container_name: flower
    image: mher/flower
    command: flower --broker=redis://redis:6379/0 --port=5555
    env_file:
      - .env
    ports:
      - 5555:5555
    networks:
      - app-network
    depends_on:
      - redis

  backend:
    container_name: fastapi
    build:
      context: backend
      dockerfile: Dockerfile
    command: python app/main.py
    tty: true
    volumes:
      - ./backend:/app:cached
    env_file:
      - .env
    environment:
      PYTHONPATH: .
    networks:
      - app-network
    depends_on:
      - postgres

  frontend:
    container_name: react
    build:
      context: frontend
      dockerfile: Dockerfile
    stdin_open: true
    volumes:
      - ./frontend:/app:cached
      - ./frontend/node_modules:/app/node_modules:cached
    ports:
      - 3000:3000
    networks:
      - app-network
    environment:
      - NODE_ENV=development

volumes:
  pg-data:

networks:
  app-network:
    driver: bridge
